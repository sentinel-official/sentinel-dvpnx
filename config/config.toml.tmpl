[keyring]
# Specifies the name of the keyring, which identifies the key storage system.
# Valid values: Any string
# Example: "default"
name = "{{ .Keyring.Name }}"

# Specifies the backend type for the keyring, defining the storage mechanism (e.g., file, memory, OS-specific storage).
# Valid values: "file", "memory", "os", "kwallet", "pass", "test"
# Example: "file"
backend = "{{ .Keyring.Backend }}"

[query]
# Specifies whether proof of validity should be included in query results.
# Valid values: true, false
# Example: true
prove = {{ .Query.Prove }}

# Specifies the number of retry attempts for queries.
# Valid values: Any positive integer
# Example: 3
retry_attempts = {{ .Query.RetryAttempts }}

# Specifies the duration to wait between retry attempts for queries.
# Valid values: Duration string
# Example: "500ms"
retry_delay = "{{ .Query.RetryDelay }}"

[rpc]
# Lists the RPC server addresses used for blockchain interactions.
# Valid values: Array of valid URL strings
# Example: ["http://rpc1.example.com", "http://rpc2.example.com"]
addrs = [{{ range .RPC.Addrs }}"{{ . }}", {{ end }}]

# Specifies the unique identifier for the blockchain network where transactions are executed.
# Valid values: Any string
# Example: "sentinelhub-2"
chain_id = "{{ .RPC.ChainID }}"

# Specifies the maximum duration allowed for completing an RPC query.
# Valid values: Duration string
# Example: "2s"
timeout = "{{ .RPC.Timeout }}"

[tx]
# Specifies the number of retry attempts for broadcasting a transaction.
# Valid values: Any positive integer
# Example: 3
broadcast_retry_attempts = {{ .Tx.BroadcastRetryAttempts }}

# Specifies the duration to wait between broadcast transaction retry attempts.
# Valid values: Duration string
# Example: "500ms"
broadcast_retry_delay = "{{ .Tx.BroadcastRetryDelay }}"

# Specifies the address of the entity granting fees for transactions.
# Valid values: Any valid blockchain address starting with "sent"
# Example: "sent1fl48vsnmsdzcv85q5d2q4z5ajdha8yu3nv8w3n"
fee_granter_addr = "{{ .Tx.FeeGranterAddr }}"

# Specifies the name of the sender's account initiating the transaction.
# Valid values: Any string
# Example: "default"
from_name = "{{ .Tx.FromName }}"

# Specifies the maximum gas units allowed for the transaction.
# Valid values: Any non-negative integer
# Example: 200000
gas = {{ .Tx.Gas }}

# Specifies the adjustment factor applied to the estimated gas for the transaction.
# Valid values: Any positive float
# Example: 1.2
gas_adjustment = {{ .Tx.GasAdjustment }}

# Specifies the price of gas in the defined denomination.
# Valid values: Any valid coin string
# Example: "0.1udvpn"
gas_prices = "{{ .Tx.GasPrices }}"

# Specifies the number of retry attempts for querying a transaction.
# Valid values: Any positive integer
# Example: 3
query_retry_attempts = {{ .Tx.QueryRetryAttempts }}

# Specifies the duration to wait between query transaction retry attempts.
# Valid values: Duration string
# Example: "500ms"
query_retry_delay = "{{ .Tx.QueryRetryDelay }}"

# Indicates whether the transaction should be simulated before execution to estimate gas and fees.
# Valid values: true, false
# Example: true
simulate_and_execute = {{ .Tx.SimulateAndExecute }}

[handshake_dns]
# Enable Handshake DNS functionality.
# Valid values: true (enabled), false (disabled).
# Example: true
enable = {{ .HandshakeDNS.Enable }}

# Specifies the number of peer connections allowed.
# Valid values: Any positive integer up to 8.
# Example: 4
peers = {{ .HandshakeDNS.Peers }}

[node]
# Specifies the API port for node operations.
# Valid values: Any valid port number
# Example: "8080"
api_port = "{{ .Node.APIPort }}"

# Specifies the pricing for data usage per gigabyte.
# Valid values: String in the format of "basevalue;quotevalue;denom", separated by commas for multiple entries.
# Format: "<basevalue>;<quotevalue>;<denom>"
# Example: "0.001;1000000;udvpn,0.001;2000;uatom"
gigabyte_prices = "{{ .Node.GigabytePrices }}"

# Specifies the pricing for hourly usage of the node's services.
# Valid values: String in the format of "basevalue;quotevalue;denom", separated by commas for multiple entries.
# Format: "<basevalue>;<quotevalue>;<denom>"
# Example: "0.001;1000000;udvpn,0.001;2000;uatom"
hourly_prices = "{{ .Node.HourlyPrices }}"

# Defines the interval for determining the optimal RPC address.
# Valid values: Duration string
# Example: "10s"
interval_best_rpc_addr = "{{ .Node.IntervalBestRPCAddr }}"

# Defines the interval for updating the GeoIP location of the node.
# Valid values: Duration string
# Example: "1h"
interval_geo_ip_location = "{{ .Node.IntervalGeoIPLocation }}"

# Defines the interval for syncing session usage data with the blockchain.
# Valid values: Duration string
# Example: "5m"
interval_session_usage_sync_with_blockchain = "{{ .Node.IntervalSessionUsageSyncWithBlockchain }}"

# Defines the interval for syncing session usage data with the local database.
# Valid values: Duration string
# Example: "5m"
interval_session_usage_sync_with_database = "{{ .Node.IntervalSessionUsageSyncWithDatabase }}"

# Defines the interval for validating session usage data.
# Valid values: Duration string
# Example: "5m"
interval_session_usage_validate = "{{ .Node.IntervalSessionUsageValidate }}"

# Defines the interval for validating active sessions.
# Valid values: Duration string
# Example: "10m"
interval_session_validate = "{{ .Node.IntervalSessionValidate }}"

# Defines the interval for conducting speed tests to assess the node's performance.
# Valid values: Duration string
# Example: "30m"
interval_speedtest = "{{ .Node.IntervalSpeedtest }}"

# Defines the interval for updating the node's status, including uptime and availability.
# Valid values: Duration string
# Example: "1h"
interval_status_update = "{{ .Node.IntervalStatusUpdate }}"

# Defines the unique name or identifier assigned to the node.
# Valid values: Any string
# Example: "node-123"
moniker = "{{ .Node.Moniker }}"

# Lists the remote addresses for node interactions.
# Valid values: Array of valid URL strings
# Example: ["http://node1.example.com", "http://node2.example.com"]
remote_addrs = [{{ range .Node.RemoteAddrs }}"{{ . }}", {{ end }}]

# Defines the type of node service, determining its role and capabilities in the network.
# Valid values: "v2ray", "wireguard", "openvpn"
# Example: "v2ray"
service_type = "{{ .Node.ServiceType }}"

[qos]
# Specifies the maximum number of peer connections allowed in Quality of Service (QoS).
# Valid values: Any positive integer up to 252.
# Example: 128
max_peers = {{ .QOS.MaxPeers }}
